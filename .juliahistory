r = rand(2,3)
b.SquareMatrix(r)
b.SquareMatrix(r)
r = rand(2,3)
r = rand(2,2)
a = b.SquareMatrix(r)
typeof(a)
typeof(r)
help(b.SquareMatrix)
size(r)
size(a)
b.size(a)
size(a)
b.size
b.size
b.size(a)
b.size(a)
b.size
size(a.M)
size
methods(size)
b.size
b.size(a)
a
b.size(a)
size(a)
size(a)
methods(size)
repl_show(a)
isa(Number, 1.2)
isa(1.2, Number)
help(Number)
help(Float64)
help(FloatingPoint)
help(Real)
size(a)
methods(size)
methods(size)
methods(size)
methods(size)
r = rand(2,3)
a = b.SquareMatrix(r)
r = rand(2,2)
a = b.SquareMatrix(r)
size(a)
methods(size)
methods(size)
size(a)
show_repl(a)
show(a)
which(show, a)
which(show, STDOUT, a)
summart(a)
summary(a)
isempty(a)
size(a)
show(a)
ndims(a)
print_matrix(STDOUT, a)
which(print_matrix, a)
which(print_matrix)
which(print_matrix, STDOUT, a)
tty_rows()
which(print_matrix, STDOUT, a, 25, 25)
print_matrix_row(STDOUT, a, 10, 1:2, " ")
isassigned(a,1,1)
a[1,1]
a[1]
a
a = b.SquareMatrix(r)
full(a)
a.M
which(full, a)
which(print_matrix)
size
print_matrix
full
a
a
a  = b.SquareMatrix(r)
a
a  = b.SquareMatrix(r)
a
a * 2
a[1]
length(a)
getindex(a,1)
a = b.SquareMatrix(rand(3,2))
a = b.SquareMatrix(rand(3,3))
a*2
b = convert(NumMatrix,a)
b
a2 = convert(b.NumMatrix, a)
a2
a
a .* 2
a * 2
a
a2
a * a2
a + a2
a
a2
a + a2
promote(a,a2)
c = promote(a,a2)
c
a
a + a2
full(a)
a = b.SquareMatrix(r)
full(a)
a
a2 = r
a + a2
isa(a2,NumMatrix)
isa(a2,b.NumMatrix)
isa(a2,Array)
isa(a2,Array{Float64,2})
a3 = convert(NumMatrix,a)
a3=convert(b.NumMatrix,a)
a
a2
a3
a2 + a3
a'
r = rand(2,2)
a = b.SquareMatrix(r)
a + r
promote(a,r)
promote(1.5,2)
+(promote(a,r))
r + r
typeof(r)
+(r,r)
+(a,r)
r
a
r[1]
r[1] = 0.5
r
a
-r
r
r*r
r
r /2
r./2
a
a*r
Matrix
promote_type(Array,Matrix)
promote_type(Matrix,b.SquareMatrix)
help(Array)
help(Array{Int32,2})
help(Matrix)
help(Type)
help(AbstractArray)
promote_type(Diagonal,Matrix)
Diagonal(rand(2,2))
x = Diagonal(rand(2,2))
y = rand(2,2)
promote(x,y)
x+y
x*y
y*x
r = rand(2,2)
a = b.SquareMatrix(r)
a+a
copy(a)
a
full(a)
x
y
a+y
y+y
full(a)+y
promote(a,y)
promote_type(b.SquareMatrix,Matrix)
convert(Matrix{Float64},a)
a2 = convert(Matrix{Float64},a)
a
a2
a+a2
a2
a2+a2
a'
a2'
promote(a,a2)
a = b.SquareMatrix(r)
a2
promote(a,a2)
a+a2
+(promote(a,a2))
+((1,2))
help(promote_array_type)
a = b.SquareMatrix(r)
a'
a2 = convert(Matrix,a)
a
a2[1] = 0.5
a
a2
promote_type(a,a2)
promote_type(b.SquareMatrix,Matrix)
methods(.*)
nnz(a)
a = b.SquareMatrix(r)
a*2
a+2
a
promote_type(SquareMatrix,Int32)
promote_type(b.SquareMatrix,Int32)
a
a.M
x = Hermitian(r)
x*2
x + 2
find(a, 0.5)
find(a)
help(similar)
r
r[0.5]
r[1]
r[1.0]
a = b.SquareMatrix(r)
a
a[1]
a[2]
a*2
a[1:2]
r[1:2]
r[:]
a[:]
a[1] = 0.5
a = b.SquareMatrix(r)
a*2
a = b.SquareMatrix(r)
a*2
a+1
a
a/2
a = b.SquareMatrix(r)
a+1
a = b.SquareMatrix(r)
a+1
a*r
r
r*r
a*2
a.*2
r*2
r.*2
a = b.SquareMatrix(r)
a*r
a.*r
r*r
r.*r
a = b.SquareMatrix(r)
a*r
r*r
a+1
r = rand(2,2)
a = b.SquareMatrix(r)
a*2
a.*2
r*2
r.*2
r*r
a*a
a
promote(a,2)
promote(a,r)
a = b.SquareMatrix(r)
a*a
a*r
a.*r
r.*r
a = b.SquareMatrix(r)
a*r
a.*r
r*r
r.*r
a = b.SquareMatrix(r)
a+1
a = b.SquareMatrix(r)
a+1
a = b.SquareMatrix(r)
a+1
r+1
r*2
a*2
a.*2
r.*2
r*r
a*a
a = b.SquareMatrix(r)
a*a
r*r
a
a*a*a
r*r*r
r^2
a^2
r.^2
a.^2
r[1]
a[1]
r'
a'
conj(r)
r
a = b.SquareMatrix(r)
a[1]
a[1] = 0.5
r
a
a'
r'
a = b.SquareMatrix(r)
size(a)
which(size, a)
